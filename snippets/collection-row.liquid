<!-- /snippets/collection-row.liquid -->
<style>
 /* .product-grid-item .space{
    height: 58vh !important;
  } */
  .aligment{
      align-items: flex-start;
    /* justify-content: center; */
    text-align: left;
    flex-direction: column;
  }
  .aligment h1{
    font-family: "Gambarino-Regular";
        text-transform: none;
    font-size: 3rem;
    letter-spacing: 1px;
    color: #006A50;
  }
  .aligment p{
    padding-bottom: 12rem;
    font-family: "Inter Tight" !important;
    color: #006A50;
    font-size: 1.2rem;
  }
 .collection-list__product .quickview span{
    color: #E6DBC4 ;
  }
 .collection-list__product .product__grid__title{
    color: #E6DBC4 ;
  }
 .collection-list__product .product__grid__price{
    color: #E6DBC4 ;
  }
  .aligment .standard__cta {
   display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    width: max-content; /* Ajusta al tamaño del texto */
    padding: 24px 24px; /* Ajusta el padding según sea necesario */
    font-weight: bold;
    font-size: 1rem;
    background-color: #006A50 !important;
    color: #E6DBC4 !important;
    border: 2.5px solid #006A50;
  }
  .aligment .standard__cta:hover{
        background-color: #E6DBC4  !important;
    color:  #006A50 !important;
    border: 2.5px solid #006A50;
  }
  @media (max-width: 2000px) {
    .aligment p{
    padding-bottom: 6em;
      
    }

  }
   @media (max-width: 1550px) {
          .aligment h1{
      font-size: 2rem
    }
      .aligment p{
    padding-bottom: 3em;
      
    }

   }
   @media (max-width: 1400px) {
          .aligment h1{
      font-size: 2rem;
    }
   }
   @media (max-width: 1100px) {
          .aligment h1{
      font-size: 1.5rem;
    }
      .aligment p{
    padding-bottom: 1rem;
        font-size: 0.8rem;
      
    }
      .aligment .standard__cta {
        font-size: 11px !important;
        margin-left: 0px;
        padding: 19px 24px;
      }
     .space {
       height: 293px !important;
     }
   }
  @media (max-width: 768px) {
    .wrapper--full .kicker-flourished{
      font-size: 39px;
    }
   
  }
</style>
{% comment %}
  Required params:
    product_limit {int} Upper limit for num of products
    grid {int} The js grid strings

  Example:
    {% render 'collection-row',
      collection: collection,
      product_limit: product_limit,
      grid: section.settings.grid,
      enable_scroll_mobile: section.settings.enable_scroll_mobile,
      grid_small: section.settings.grid_small,
      collection_title_override: block.settings.title,
      link_text: block.settings.link_text,
      enable_item: block.settings.enable_item,
      item_background: block.settings.item_background,
      item_text: block.settings.item_link_text,
      item_text_size: block.settings.item_link_size,
      item_text_color: block.settings.item_link_color %}
{% endcomment %}
{%- assign enable_item = enable_item | default: false -%}
{%- assign product_limit = product_limit | default: 3 -%}
{%- assign grid = grid | default: 3 -%}
{%- assign is_empty_collection = false -%}
{%- assign collection_onboarding_title = 'collections.general.collection_grid_title' | t -%}

{%- if collection_title == blank -%}
  {%- assign collection_title = collection.title | default: collection_onboarding_title -%}
{%- endif -%}

{%- assign link_text = link_text | replace: '[name]', collection_title | default: '' -%}

{%- if enable_item -%}
  {%- assign product_limit = product_limit | minus: 1 -%}

  {% comment %} Item Block HTML {% endcomment %}
  {%- capture item_html -%}
    {%- assign image_ratio = settings.product_card_wh_ratio | times: 100 -%}

    {%- if item_text == blank -%}
      {%- capture item_text -%}{{ 'collections.general.shop_all' | t: name: collection_title }}{%- endcapture -%}
    {%- endif -%}

    {%- if enable_scroll_mobile -%}
      <div class="collection-list__product">
    {%- endif -%}

      <div class="product-grid-item section--image {{ item_text_color }}">
        <a href="{{ collection.url }}" class="space product-grid-item__link" aria-label="{{ collection_title | strip_html | escape }}" style="padding-top:{{ image_ratio }}%; background-color: {{ item_background | default: '#fcfaf7' }};">
          <div
            class="hero__content__wrapper aligment"
            aria-label="{{ collection_title | escape }}">
            {% assign link_size_class = item_link_size | prepend: 'accent-size-' %}
            <h1>Long Title description goes here</h1>
            <p>Cursus pellentesque pellentesque turpis odio vel sodales urna vitae.</p>
            <div class="standard__cta hero__btn btn btn--primary btn--long aos-init aos-animate {{ link_size_class }}">
              {{ item_text | replace: '[name]', collection_title }}
            </div>
          </div>
        </a>
      </div>

    {%- if enable_scroll_mobile -%}
      </div><!-- /.collection-list__product -->
    {%- endif -%}
  {%- endcapture -%}
{%- endif -%}

{%- if collection.all_products_count == 0 -%}
  {%- assign is_empty_collection = true -%}
{%- endif -%}

{%- if collection != blank -%}
  <div class="collection-list-item">
    <div class="collection-list__heading__text">
      <a href="{{ collection.url }}" class="hero__title heading-size-7" title="{{ 'collections.general.link_title' | t: title: collection_title }}">
        {{ collection_title_override | replace: '[name]', collection_title | default: collection_title }}
      </a>

      {%- if link_text != '' and is_empty_collection == false -%}
        {% assign link_size_class = item_link_size | prepend: 'accent-size-' %}
        <a href="{{ collection.url }}" class="text-btn-arrow-right {{ link_size_class }}" title="{{ 'collections.general.link_title' | t: title: collection_title }}">
          {{ link_text }}
        </a>
      {%- endif -%}
    </div>

    {%- unless is_empty_collection -%}
      <div class="js-grid{% if enable_scroll_mobile %} collection-list__products{% endif %}" data-grid-large="{{ grid }}" data-grid-small="2" style="--product-width: calc({{ 100 | divided_by: grid_small | append: 'vw' }} - var(--gutter)*2);">
        {% for product in collection.products limit: product_limit %}
          {%- capture placeholder -%}
            product-{%- cycle '1', '2', '3', '4', '5', '6' -%}
          {%- endcapture -%}

          {%- if enable_scroll_mobile -%}
            <div class="collection-list__product">
          {%- endif -%}

          {%- render 'product-grid-item', product: product, placeholder: placeholder -%}

          {%- if enable_scroll_mobile -%}
            </div><!-- /.collection-list__product -->
          {%- endif -%}
        {% endfor %}

        {%- if enable_item -%}
          {{- item_html -}}
        {%- endif -%}
      </div>
    {%- else -%}
      <p>{{ 'collections.general.no_matches' | t }}</p>
    {%- endunless -%}
  </div>
{%- else -%}
  <div class="collection-list-item">
    <div class="collection-list__heading__text">
      <a href="{{ routes.collections_url }}" class="hero__title heading-size-7" title="{{- 'collections.general.collection_grid_cta' | t -}}">
        {{ collection_title_override | replace: '[name]', collection_title | default: collection_title }}
      </a>

      {%- if link_text != '' -%}
        {% assign link_size_class = item_link_size | prepend: 'accent-size-' %}
        <a href="{{ routes.collections_url }}" class="text-btn-arrow-right {{ link_size_class }}" title="{{- 'collections.general.collection_grid_cta' | t -}}">
          {{ link_text }}
        </a>
      {%- endif -%}
    </div>

    <div class="js-grid{% if enable_scroll_mobile %} collection-list__products{% endif %}" data-grid-large="{{ grid }}" data-grid-small="2" style="--product-width: calc({{ 100 | divided_by: grid_small | append: 'vw' }} - var(--gutter)*2);">
      {%- assign wrap = 'collection-list__product-wrap' -%}

      {%- if enable_scroll_mobile -%}
        {%- assign wrap = 'collection-list__product' -%}
      {%- endif -%}

      {%- render 'onboarding-product-grid-item', limit: product_limit, wrap: wrap -%}

      {%- if enable_item -%}
        {{- item_html -}}
      {%- endif -%}
    </div>
  </div>
{%- endif -%}
<script>
  function matchHeights() {
  let images = document.querySelectorAll('.product-grid-item__images');
  let spaces = document.querySelectorAll('.product-grid-item .space');

  images.forEach((image, index) => {
    if (spaces[index]) {
      let height = image.clientHeight;
      spaces[index].style.height = height + "px";
    }
  });
}

// Run on page load & when resizing
window.addEventListener("load", matchHeights);
window.addEventListener("resize", matchHeights);
</script>
